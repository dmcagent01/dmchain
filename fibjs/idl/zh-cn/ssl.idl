/*! @brief ssl/tls 模块，模块别名：tls */
module ssl
{
    /*! @brief 证书验证模式，不验证 */
    const VERIFY_NONE = 0;

    /*! @brief 证书验证模式，可选验证，允许验证不通过 */
    const VERIFY_OPTIONAL = 1;

    /*! @brief 证书验证模式，要求验证，验证不通过则中断 */
    const VERIFY_REQUIRED = 2;

    /*! @brief 证书验证结果，证书超时 */
    const BADCERT_EXPIRED = 1;

    /*! @brief 证书验证结果，证书被撤销 */
    const BADCERT_REVOKED = 2;

    /*! @brief 证书验证结果，证书名错误 */
    const BADCERT_CN_MISMATCH = 4;

    /*! @brief 证书验证结果，证书不可信 */
    const BADCERT_NOT_TRUSTED = 8;

    /*! @brief 创建一个 SslSocket 对象，参见 SslSocket */
    static SslSocket new Socket();

    /*! @brief 创建一个 SslHandler 对象，参见 SslHandler */
    static SslHandler new Handler();

    /*! @brief 创建一个 SslServer 对象，参见 SslServer */
    static SslServer new Server();

    /*! @brief 创建一个 SslSocket 对象并建立连接
    @param url 指定连接的协议，可以是：ssl://host:port
    @param timeout 指定超时时间，单位是毫秒，默认为0
    @return 返回连接成功的 SslSocket 对象
   */
    static Stream connect(String url, Integer timeout = 0) async;

    /*! @brief 创建一个 SslSocket 对象并建立连接
    @param url 指定连接的协议，可以是：ssl://host:port
    @param crt 证书，用于发送给服务器验证客户端
    @param key 私钥，用于与客户端会话
    @param timeout 指定超时时间，单位是毫秒，默认为0
    @return 返回连接成功的 SslSocket 对象
   */
    static Stream connect(String url, X509Cert crt, PKey key, Integer timeout = 0) async;

    /*! @brief 设定缺省客户端证书
    @param crt 证书，用于发送给服务器验证客户端
    @param key 私钥，用于与客户端会话
   */
    static setClientCert(X509Cert crt, PKey key);

    /*! @brief 加载自带的缺省根证书，等同于 ssl.ca.loadRootCerts
    此证书内容源自：http://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt */
    static loadRootCerts();

    /*! @brief 全局证书，用于 ssl 客户端模式验证服务器证书 */
    static readonly X509Cert ca;

    /*! @brief 设定证书验证模式，缺省为 VERIFY_REQUIRED */
    static Integer verification;
};
